abstract class ChessPiece
{
	String currTileIndex;
	ArrayList<Tile> initialTiles;
	final String color;

	abstract boolean checkMove(Tile destTile);
	void move(Tile destTile)
	
}

class Bishop extends chessPiece
{
	abstract boolean checkMove("E2")
		curr = "A2"
		dest = "E2"
		
		int colDiff = cur[0] - dest[0]
		int rowDiff = curr[1] - dest[1]
		
		colDiff - rowDiff
		if (colDiff == rowDiff)
		return true;
}

class ChessBoard
{
	ArrayList<ArrayList<Tile>> tilesGrid;
        setTilePiece
        getTilePiece    
}

class Tile
{
	ChessPiece chessPiece;
	final String coordinate;
	boolean occupied;
	
	setters and getters
}